name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra test
    
    - name: Run tests
      run: |
        uv run pytest tests/ -v --tb=short
    
    - name: Run tests with coverage
      run: |
        uv run pytest tests/ --cov=nasdaq_data_link_mcp_os --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv add --group dev ruff mypy
    
    - name: Run ruff (linter)
      run: |
        uv run ruff check nasdaq_data_link_mcp_os/ tests/
    
    - name: Run ruff (formatter)
      run: |
        uv run ruff format --check nasdaq_data_link_mcp_os/ tests/
    
    - name: Run mypy (type checker)
      run: |
        uv run mypy nasdaq_data_link_mcp_os/ --ignore-missing-imports
      continue-on-error: true  # Don't fail CI on type errors initially